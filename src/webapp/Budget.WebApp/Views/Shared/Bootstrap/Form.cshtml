@using Budget.WebApp.Extensions
@using System.Web.Mvc.Html

@{
    FormOptions formOptions = ViewBag.FormOptions;
}

@using (FormExtensions.BeginForm(Html, formOptions.Action, formOptions.Controller, FormMethod.Post, formOptions.FormAttributes))
{
    @Form(formOptions);
    @Bootstrap.SubmitForm(formOptions.SubmitText, formOptions.FullWidthSubmit)
    @Bootstrap.ValidationSummary();
}

@helper Form(FormOptions formOptions)
{
    Func<ModelMetadata, bool> shouldShow = metadata =>
       {
           return metadata.ShowForEdit
               && !metadata.IsComplexType
               && !ViewData.TemplateInfo.Visited(metadata);
       };


    if (ViewData.TemplateInfo.TemplateDepth > 1)
    {
        if (Model == null)
        {
            @ViewData.ModelMetadata.NullDisplayText
        }
        else
        {
            @ViewData.ModelMetadata.SimpleDisplayText
        }
    }
    else
    {
        foreach (var prop in ViewData.ModelMetadata.Properties.Where(shouldShow))
        {
            if (prop.HideSurroundingHtml) // hidden inputs
            {
                @Html.Editor(prop.PropertyName)
            }
            else
            {
                <div class="form-group @(string.IsNullOrEmpty(formOptions.InputWidth) ? string.Empty : "row")">
                    @Html.Label(prop.PropertyName, formOptions.LabelAttributes)
                    @{
                        MvcHtmlString input = Html.Editor(prop.PropertyName, new { htmlAttributes = new { @class = "form-control input-sm" } });
                     }

                    @if (string.IsNullOrEmpty(formOptions.InputWidth))
                    {
                        @input
                    }
                    else
                    {
                        <div class="@formOptions.InputWidth">
                            @input
                        </div>
                    }
                    
                    @Html.ValidationMessage(prop.PropertyName)
                </div>
            }
        }
    }
}