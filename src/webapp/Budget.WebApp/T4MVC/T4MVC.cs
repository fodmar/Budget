// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static Budget.WebApp.Controllers.ErrorController Error = new Budget.WebApp.Controllers.T4MVC_ErrorController();
    public static Budget.WebApp.Controllers.LanguageController Language = new Budget.WebApp.Controllers.T4MVC_LanguageController();
    public static Budget.WebApp.Controllers.LoginController Login = new Budget.WebApp.Controllers.T4MVC_LoginController();
    public static Budget.WebApp.Controllers.OverviewController Overview = new Budget.WebApp.Controllers.T4MVC_OverviewController();
    public static Budget.WebApp.Controllers.ProductController Product = new Budget.WebApp.Controllers.T4MVC_ProductController();
    public static T4MVC.ObjectController Object = new T4MVC.ObjectController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        public const string UrlPath = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class app {
            public const string UrlPath = "~/Scripts/app";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string btnloader_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/btnloader.min.js") ? Url("btnloader.min.js") : Url("btnloader.js");
            public static readonly string callwrapper_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/callwrapper.min.js") ? Url("callwrapper.min.js") : Url("callwrapper.js");
            public static readonly string list_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/list.min.js") ? Url("list.min.js") : Url("list.js");
            public static readonly string login_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/login.min.js") ? Url("login.min.js") : Url("login.js");
            public static readonly string overview_calendar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/overview-calendar.min.js") ? Url("overview-calendar.min.js") : Url("overview-calendar.js");
            public static readonly string overview_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/overview.min.js") ? Url("overview.min.js") : Url("overview.js");
            public static readonly string products_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/products.min.js") ? Url("products.min.js") : Url("products.js");
            public static readonly string template_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/template.min.js") ? Url("template.min.js") : Url("template.js");
            public static readonly string text_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/text.min.js") ? Url("text.min.js") : Url("text.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class lib {
            public const string UrlPath = "~/Scripts/lib";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string bootstrap_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.js") ? Url("bootstrap.min.js") : Url("bootstrap.js");
            public static readonly string bootstrap_min_js = Url("bootstrap.min.js");
            public static readonly string fullcalendar_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fullcalendar.min.js") ? Url("fullcalendar.min.js") : Url("fullcalendar.js");
            public static readonly string fullcalendar_min_js = Url("fullcalendar.min.js");
            public static readonly string i18n_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/i18n.min.js") ? Url("i18n.min.js") : Url("i18n.js");
            public static readonly string jquery_3_1_1_intellisense_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.1.1.intellisense.min.js") ? Url("jquery-3.1.1.intellisense.min.js") : Url("jquery-3.1.1.intellisense.js");
            public static readonly string jquery_3_1_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-3.1.1.min.js") ? Url("jquery-3.1.1.min.js") : Url("jquery-3.1.1.js");
            public static readonly string jquery_3_1_1_min_js = Url("jquery-3.1.1.min.js");
            public static readonly string jquery_3_1_1_min_map = Url("jquery-3.1.1.min.map");
            public static readonly string jquery_ui_1_12_1_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-ui-1.12.1.min.js") ? Url("jquery-ui-1.12.1.min.js") : Url("jquery-ui-1.12.1.js");
            public static readonly string jquery_ui_1_12_1_min_js = Url("jquery-ui-1.12.1.min.js");
            public static readonly string jquery_validate_vsdoc_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate-vsdoc.min.js") ? Url("jquery.validate-vsdoc.min.js") : Url("jquery.validate-vsdoc.js");
            public static readonly string jquery_validate_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.min.js") ? Url("jquery.validate.min.js") : Url("jquery.validate.js");
            public static readonly string jquery_validate_min_js = Url("jquery.validate.min.js");
            public static readonly string jquery_validate_unobtrusive_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery.validate.unobtrusive.min.js") ? Url("jquery.validate.unobtrusive.min.js") : Url("jquery.validate.unobtrusive.js");
            public static readonly string jquery_validate_unobtrusive_min_js = Url("jquery.validate.unobtrusive.min.js");
            public static readonly string locale_all_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/locale-all.min.js") ? Url("locale-all.min.js") : Url("locale-all.js");
            public static readonly string moment_with_locales_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moment-with-locales.min.js") ? Url("moment-with-locales.min.js") : Url("moment-with-locales.js");
            public static readonly string moment_with_locales_min_js = Url("moment-with-locales.min.js");
            public static readonly string moment_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/moment.min.js") ? Url("moment.min.js") : Url("moment.js");
            public static readonly string moment_min_js = Url("moment.min.js");
            public static readonly string r_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/r.min.js") ? Url("r.min.js") : Url("r.js");
            public static readonly string require_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/require.min.js") ? Url("require.min.js") : Url("require.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class nls {
            public const string UrlPath = "~/Scripts/nls";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class pl {
                public const string UrlPath = "~/Scripts/nls/pl";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string text_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/text.min.js") ? Url("text.min.js") : Url("text.js");
            }
        
            public static readonly string text_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/text.min.js") ? Url("text.min.js") : Url("text.js");
        }
    
        public static readonly string require_config_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/require.config.min.js") ? Url("require.config.min.js") : Url("require.config.js");
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        public const string UrlPath = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class app {
            public const string UrlPath = "~/Content/app";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string app_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/app.min.css") ? Url("app.min.css") : Url("app.css");
            public static readonly string jquery_ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-ui.min.css") ? Url("jquery-ui.min.css") : Url("jquery-ui.css");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class fonts {
            public const string UrlPath = "~/Content/fonts";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string glyphicons_halflings_regular_eot = Url("glyphicons-halflings-regular.eot");
            public static readonly string glyphicons_halflings_regular_svg = Url("glyphicons-halflings-regular.svg");
            public static readonly string glyphicons_halflings_regular_ttf = Url("glyphicons-halflings-regular.ttf");
            public static readonly string glyphicons_halflings_regular_woff = Url("glyphicons-halflings-regular.woff");
            public static readonly string glyphicons_halflings_regular_woff2 = Url("glyphicons-halflings-regular.woff2");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class gif {
            public const string UrlPath = "~/Content/gif";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string loading_gif = Url("loading.gif");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class lib {
            public const string UrlPath = "~/Content/lib";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string bootstrap_theme_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap-theme.min.css") ? Url("bootstrap-theme.min.css") : Url("bootstrap-theme.css");
            public static readonly string bootstrap_theme_css_map = Url("bootstrap-theme.css.map");
            public static readonly string bootstrap_theme_min_css = Url("bootstrap-theme.min.css");
            public static readonly string bootstrap_theme_min_css_map = Url("bootstrap-theme.min.css.map");
            public static readonly string bootstrap_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/bootstrap.min.css") ? Url("bootstrap.min.css") : Url("bootstrap.css");
            public static readonly string bootstrap_css_map = Url("bootstrap.css.map");
            public static readonly string bootstrap_min_css = Url("bootstrap.min.css");
            public static readonly string bootstrap_min_css_map = Url("bootstrap.min.css.map");
            public static readonly string fullcalendar_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/fullcalendar.min.css") ? Url("fullcalendar.min.css") : Url("fullcalendar.css");
            public static readonly string fullcalendar_min_css = Url("fullcalendar.min.css");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class images {
                public const string UrlPath = "~/Content/lib/images";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
                public static readonly string ui_bg_flat_0_aaaaaa_40x100_png = Url("ui-bg_flat_0_aaaaaa_40x100.png");
                public static readonly string ui_bg_flat_75_ffffff_40x100_png = Url("ui-bg_flat_75_ffffff_40x100.png");
                public static readonly string ui_bg_glass_55_fbf9ee_1x400_png = Url("ui-bg_glass_55_fbf9ee_1x400.png");
                public static readonly string ui_bg_glass_65_ffffff_1x400_png = Url("ui-bg_glass_65_ffffff_1x400.png");
                public static readonly string ui_bg_glass_75_dadada_1x400_png = Url("ui-bg_glass_75_dadada_1x400.png");
                public static readonly string ui_bg_glass_75_e6e6e6_1x400_png = Url("ui-bg_glass_75_e6e6e6_1x400.png");
                public static readonly string ui_bg_glass_95_fef1ec_1x400_png = Url("ui-bg_glass_95_fef1ec_1x400.png");
                public static readonly string ui_bg_highlight_soft_75_cccccc_1x100_png = Url("ui-bg_highlight-soft_75_cccccc_1x100.png");
                public static readonly string ui_icons_222222_256x240_png = Url("ui-icons_222222_256x240.png");
                public static readonly string ui_icons_2e83ff_256x240_png = Url("ui-icons_2e83ff_256x240.png");
                public static readonly string ui_icons_444444_256x240_png = Url("ui-icons_444444_256x240.png");
                public static readonly string ui_icons_454545_256x240_png = Url("ui-icons_454545_256x240.png");
                public static readonly string ui_icons_555555_256x240_png = Url("ui-icons_555555_256x240.png");
                public static readonly string ui_icons_777620_256x240_png = Url("ui-icons_777620_256x240.png");
                public static readonly string ui_icons_777777_256x240_png = Url("ui-icons_777777_256x240.png");
                public static readonly string ui_icons_888888_256x240_png = Url("ui-icons_888888_256x240.png");
                public static readonly string ui_icons_cc0000_256x240_png = Url("ui-icons_cc0000_256x240.png");
                public static readonly string ui_icons_cd0a0a_256x240_png = Url("ui-icons_cd0a0a_256x240.png");
                public static readonly string ui_icons_ffffff_256x240_png = Url("ui-icons_ffffff_256x240.png");
            }
        
            public static readonly string jquery_ui_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/jquery-ui.min.css") ? Url("jquery-ui.min.css") : Url("jquery-ui.css");
            public static readonly string jquery_ui_min_css = Url("jquery-ui.min.css");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class material_icons {
            public const string UrlPath = "~/Content/material-icons";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(UrlPath); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(UrlPath + "/" + fileName); }
            public static readonly string material_icons_css = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(UrlPath + "/material-icons.min.css") ? Url("material-icons.min.css") : Url("material-icons.css");
            public static readonly string MaterialIcons_Regular_eot = Url("MaterialIcons-Regular.eot");
            public static readonly string MaterialIcons_Regular_ijmap = Url("MaterialIcons-Regular.ijmap");
            public static readonly string MaterialIcons_Regular_svg = Url("MaterialIcons-Regular.svg");
            public static readonly string MaterialIcons_Regular_ttf = Url("MaterialIcons-Regular.ttf");
            public static readonly string MaterialIcons_Regular_woff = Url("MaterialIcons-Regular.woff");
            public static readonly string MaterialIcons_Regular_woff2 = Url("MaterialIcons-Regular.woff2");
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class app 
            {
                public static class Assets
                {
                    public const string btnloader_js = "~/Scripts/app/btnloader.js"; 
                    public const string callwrapper_js = "~/Scripts/app/callwrapper.js"; 
                    public const string list_js = "~/Scripts/app/list.js"; 
                    public const string login_js = "~/Scripts/app/login.js"; 
                    public const string overview_calendar_js = "~/Scripts/app/overview-calendar.js"; 
                    public const string overview_js = "~/Scripts/app/overview.js"; 
                    public const string products_js = "~/Scripts/app/products.js"; 
                    public const string template_js = "~/Scripts/app/template.js"; 
                    public const string text_js = "~/Scripts/app/text.js"; 
                }
            }
            public static partial class lib 
            {
                public static class Assets
                {
                    public const string bootstrap_js = "~/Scripts/lib/bootstrap.js"; 
                    public const string bootstrap_min_js = "~/Scripts/lib/bootstrap.min.js"; 
                    public const string fullcalendar_js = "~/Scripts/lib/fullcalendar.js"; 
                    public const string fullcalendar_min_js = "~/Scripts/lib/fullcalendar.min.js"; 
                    public const string i18n_js = "~/Scripts/lib/i18n.js"; 
                    public const string jquery_3_1_1_intellisense_js = "~/Scripts/lib/jquery-3.1.1.intellisense.js"; 
                    public const string jquery_3_1_1_js = "~/Scripts/lib/jquery-3.1.1.js"; 
                    public const string jquery_3_1_1_min_js = "~/Scripts/lib/jquery-3.1.1.min.js"; 
                    public const string jquery_ui_1_12_1_js = "~/Scripts/lib/jquery-ui-1.12.1.js"; 
                    public const string jquery_ui_1_12_1_min_js = "~/Scripts/lib/jquery-ui-1.12.1.min.js"; 
                    public const string jquery_validate_js = "~/Scripts/lib/jquery.validate.js"; 
                    public const string jquery_validate_min_js = "~/Scripts/lib/jquery.validate.min.js"; 
                    public const string jquery_validate_unobtrusive_js = "~/Scripts/lib/jquery.validate.unobtrusive.js"; 
                    public const string jquery_validate_unobtrusive_min_js = "~/Scripts/lib/jquery.validate.unobtrusive.min.js"; 
                    public const string locale_all_js = "~/Scripts/lib/locale-all.js"; 
                    public const string moment_with_locales_js = "~/Scripts/lib/moment-with-locales.js"; 
                    public const string moment_with_locales_min_js = "~/Scripts/lib/moment-with-locales.min.js"; 
                    public const string moment_js = "~/Scripts/lib/moment.js"; 
                    public const string moment_min_js = "~/Scripts/lib/moment.min.js"; 
                    public const string r_js = "~/Scripts/lib/r.js"; 
                    public const string require_js = "~/Scripts/lib/require.js"; 
                }
            }
            public static partial class nls 
            {
                public static partial class pl 
                {
                    public static class Assets
                    {
                        public const string text_js = "~/Scripts/nls/pl/text.js"; 
                    }
                }
                public static class Assets
                {
                    public const string text_js = "~/Scripts/nls/text.js"; 
                }
            }
            public static class Assets
            {
                public const string require_config_js = "~/Scripts/require.config.js"; 
            }
        }
        public static partial class Content 
        {
            public static partial class app 
            {
                public static class Assets
                {
                    public const string app_css = "~/Content/app/app.css";
                    public const string jquery_ui_css = "~/Content/app/jquery-ui.css";
                }
            }
            public static partial class fonts 
            {
                public static class Assets
                {
                }
            }
            public static partial class gif 
            {
                public static class Assets
                {
                }
            }
            public static partial class lib 
            {
                public static partial class images 
                {
                    public static class Assets
                    {
                    }
                }
                public static class Assets
                {
                    public const string bootstrap_theme_css = "~/Content/lib/bootstrap-theme.css";
                    public const string bootstrap_theme_min_css = "~/Content/lib/bootstrap-theme.min.css";
                    public const string bootstrap_css = "~/Content/lib/bootstrap.css";
                    public const string bootstrap_min_css = "~/Content/lib/bootstrap.min.css";
                    public const string fullcalendar_css = "~/Content/lib/fullcalendar.css";
                    public const string fullcalendar_min_css = "~/Content/lib/fullcalendar.min.css";
                    public const string jquery_ui_css = "~/Content/lib/jquery-ui.css";
                    public const string jquery_ui_min_css = "~/Content/lib/jquery-ui.min.css";
                }
            }
            public static partial class material_icons 
            {
                public static class Assets
                {
                    public const string material_icons_css = "~/Content/material-icons/material-icons.css";
                }
            }
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


